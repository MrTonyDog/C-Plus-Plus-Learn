<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\AdminManager\Admin\Controller; use App\Constant\AppConstant; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Artisan; use ModStart\Admin\Auth\AdminPermission; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\FileUtil; use ModStart\Module\ModuleManager; use Module\AdminManager\Util\ModuleUtil; use Module\AdminManager\Util\UpgradeUtil; use Module\ModuleStore\Util\ModuleStoreUtil; class UpgradeController extends Controller { public static $PermitMethodMap = array('index' => '@SystemUpgrade', 'info' => '@SystemUpgrade', 'auth' => '@SystemUpgrade'); private function doFinish($N9oEa, $Lo9Xy = null) { return Response::generateSuccessData(array('msg' => array_map(function ($KdsT8) { return '<i class="iconfont icon-hr"></i> ' . $KdsT8; }, $N9oEa), 'logs' => $Lo9Xy, 'finish' => true)); } private function doNext($gGKO8, $N9oEa = array(), $hRWBB = array()) { goto NHIbu; y3alC: return Response::generateSuccessData(array('msg' => array_map(function ($KdsT8) { if (!starts_with($KdsT8, '<')) { $KdsT8 = "<span class='ub-text-default'>{$KdsT8}</span>"; } return '<i class="iconfont icon-hr"></i> ' . $KdsT8; }, $N9oEa), 'step' => $gGKO8, 'data' => $hRWBB, 'finish' => false)); goto kBILG; w1sbf: $hRWBB = array_merge($HoLMG->getJsonAsInput('data')->all(), $hRWBB); goto y3alC; NHIbu: $HoLMG = InputPackage::buildFromInput(); goto w1sbf; kBILG: } public function index() { if (Request::isPost()) { goto eD289; spAVd: BizException::throwsIfEmpty('toVersion为空', $HWfbK); goto hwzEQ; Y8Xde: $HoLMG = InputPackage::buildFromInput(); goto xa4Dw; eD289: AdminPermission::demoCheck(); goto Y8Xde; hwzEQ: switch ($gGKO8) { case 'upgradePackage': goto gyUa_; epufn: BizException::throwsIfEmpty('package为空', $vgCwG); goto HFQC2; Cxdm8: return $this->doFinish(array('<span class="ub-text-success">升级完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>'), $mW7Vi['data']['logs']); goto Qosxl; HFQC2: BizException::throwsIfEmpty('diffContentFile为空', $zYgkK); goto sD0yM; sD0yM: $mW7Vi = UpgradeUtil::upgradePackage($vgCwG, $zYgkK); goto t5j8w; gyUa_: $vgCwG = $tlqSz->getTrimString('package'); goto GMAV6; GMAV6: $zYgkK = $tlqSz->getTrimString('diffContentFile'); goto epufn; t5j8w: BizException::throwsIfResponseError($mW7Vi); goto Cxdm8; Qosxl: case 'downloadPackage': goto zhupl; zhupl: $mW7Vi = UpgradeUtil::downloadPackage($Vhd2R, AppConstant::APP, AppConstant::VERSION, $HWfbK); goto bCsHF; bCsHF: BizException::throwsIfResponseError($mW7Vi); goto kK7S3; kK7S3: return $this->doNext('upgradePackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($mW7Vi['data']['packageSize']) . '</span>', '<span class="ub-text-default">开始解压升级装包...</span>'), array('package' => $mW7Vi['data']['package'], 'diffContentFile' => $mW7Vi['data']['diffContentFile'])); goto ok5DZ; ok5DZ: case 'checkPackage': goto XE0l2; m1uM_: BizException::throwsIf('调用 php artisan 命令失败，不能自动升级', 0 != $mvcus); goto jwFUA; jwFUA: return $this->doNext('downloadPackage', array('<span class="ub-text-success">预检通过</span>', '<span class="ub-text-default">开始下载升级包...</span>')); goto nGgQg; nGgQg: break; goto EKqCp; XE0l2: $mvcus = Artisan::call('migrate'); goto m1uM_; EKqCp: default: return $this->doNext('checkPackage', array('<span class="ub-text-success">开始升级系统，从 V' . AppConstant::VERSION . ' 到 V' . $HWfbK . '</span>', '<span class="ub-text-default">开始预检系统...</span>')); } goto oTnzE; Ubw1Y: $Vhd2R = $HoLMG->getTrimString('token'); goto sWk_r; xa4Dw: $gGKO8 = $HoLMG->getTrimString('step'); goto Ubw1Y; sWk_r: $tlqSz = $HoLMG->getJsonAsInput('data'); goto D7y6E; D7y6E: $HWfbK = $tlqSz->getTrimString('toVersion'); goto spAVd; oTnzE: } return view('module::AdminManager.View.admin.upgrade'); } public function auth() { return view('module::AdminManager.View.admin.auth', array('modules' => ModuleUtil::modules())); } public function info() { $dSq0w = UpgradeUtil::latest(); return Response::generateSuccessData(array('version' => AppConstant::VERSION, 'latestVersion' => $dSq0w['latestVersion'], 'autoUpgrade' => $dSq0w['autoUpgrade'])); } }