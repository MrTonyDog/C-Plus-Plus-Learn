<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Api\Controller; use Illuminate\Support\Facades\Session; use Illuminate\Support\Str; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\CurlUtil; use ModStart\Core\Util\EventUtil; use ModStart\Core\Util\FileUtil; use ModStart\Misc\Captcha\CaptchaFacade; use ModStart\Module\ModuleBaseController; use Module\Member\Config\MemberOauth; use Module\Member\Events\MemberUserLoginedEvent; use Module\Member\Events\MemberUserPasswordResetedEvent; use Module\Member\Events\MemberUserRegisteredEvent; use Module\Member\Oauth\AbstractOauth; use Module\Member\Provider\RegisterProcessor\AbstractMemberRegisterProcessorProvider; use Module\Member\Provider\RegisterProcessor\MemberRegisterProcessorProvider; use Module\Member\Util\MemberUtil; use Module\Vendor\Email\MailSendJob; use Module\Vendor\Provider\Captcha\CaptchaProvider; use Module\Vendor\Session\SessionUtil; use Module\Vendor\Sms\SmsUtil; use Module\Vendor\Support\ResponseCodes; class AuthController extends ModuleBaseController { public function oauthTryLogin($LYyd5 = null) { goto U0wVx; Dliw9: $mW7Vi = $Cdaf0->processTryLogin(array('userInfo' => $jQCZu)); goto N_lBo; fO9S9: if (empty($jQCZu)) { return Response::generate(-1, '用户授权数据为空'); } goto CgvjU; Kz1Rb: BizException::throwsIfEmpty('授权类型为空', $LYyd5); goto c2mFb; N_lBo: BizException::throwsIfResponseError($mW7Vi); goto bL3K9; CgvjU: if (empty($LYyd5)) { $HoLMG = InputPackage::buildFromInput(); $LYyd5 = $HoLMG->getTrimString('type'); } goto Kz1Rb; b9LbR: return Response::generate(0, null, array('memberUserId' => 0)); goto P7RvG; U0wVx: $jQCZu = Session::get('oauthUserInfo', array()); goto fO9S9; bL3K9: if ($mW7Vi['data']['memberUserId'] > 0) { goto k8rqA; k8rqA: Session::put('memberUserId', $mW7Vi['data']['memberUserId']); goto geVzD; j_UfY: return Response::generateSuccessData(array('memberUserId' => $mW7Vi['data']['memberUserId'])); goto tb0mD; geVzD: Session::forget('oauthUserInfo'); goto j_UfY; tb0mD: } goto b9LbR; c2mFb: $Cdaf0 = MemberOauth::getOrFail($LYyd5); goto Dliw9; P7RvG: } public function oauthBind($LYyd5 = null) { goto ZkYd5; RI3kn: $WwPD5 = Session::get('memberUserId', 0); goto O36CF; Vw6L9: Session::put('memberUserId', $H7GUl); goto qYWIt; D6h8x: $mW7Vi = $Cdaf0->processTryLogin(array('userInfo' => $jQCZu)); goto va_x7; O36CF: if ($WwPD5 > 0) { goto IBUIh; VWZ_h: Session::forget('oauthUserInfo'); goto xex04; VzyBi: BizException::throwsIfResponseError($mW7Vi); goto VWZ_h; xex04: return Response::generate(0, null, null, $vB6nX); goto fDRjm; IBUIh: $mW7Vi = $Cdaf0->processBindToUser(array('memberUserId' => $WwPD5, 'userInfo' => $jQCZu)); goto VzyBi; fDRjm: } goto D6h8x; zRVVy: if (empty($jQCZu)) { return Response::generate(-1, '用户授权数据为空'); } goto FUO0W; YdUHF: $mW7Vi = MemberUtil::register($W03l4, null, null, null, true); goto RFz6Y; FUO0W: $Cdaf0 = MemberOauth::getOrFail($LYyd5); goto RI3kn; Vwx7n: $H7GUl = $mW7Vi['data']['id']; goto GTmog; y_PyK: $jQCZu = Session::get('oauthUserInfo', array()); goto zRVVy; Lde9t: $LYyd5 = $HoLMG->getTrimString('type', $LYyd5); goto y_PyK; O2yZx: if (!empty($jQCZu['avatar'])) { goto IIv3J; jSkiq: if (!empty($vZVS1)) { if (empty($xLhgB)) { $xLhgB = 'jpg'; } MemberUtil::setAvatar($H7GUl, $vZVS1, $xLhgB); } goto DD5nC; kgQ84: $vZVS1 = CurlUtil::getRaw($jQCZu['avatar']); goto jSkiq; IIv3J: $xLhgB = FileUtil::extension($jQCZu['avatar']); goto kgQ84; DD5nC: } goto Vw6L9; qYWIt: Session::forget('oauthUserInfo'); goto L2McZ; zvLMh: $W03l4 = $HoLMG->getTrimString('username'); goto YdUHF; va_x7: BizException::throwsIfResponseError($mW7Vi); goto QDD5w; yjC4P: EventUtil::fire(new MemberUserRegisteredEvent($H7GUl)); goto O2yZx; L2McZ: return Response::generate(0, null); goto VHtDh; qPv2f: BizException::throwsIfResponseError($mW7Vi); goto yjC4P; qxlxa: $vB6nX = $HoLMG->getTrimString('redirect', modstart_web_url('')); goto Lde9t; QDD5w: if ($mW7Vi['data']['memberUserId'] > 0) { goto z5F9O; z5F9O: Session::put('memberUserId', $mW7Vi['data']['memberUserId']); goto Mqn7F; Mqn7F: Session::forget('oauthUserInfo'); goto u9k8u; u9k8u: return Response::generateSuccessData(array('memberUserId' => $mW7Vi['data']['memberUserId'])); goto JG_E7; JG_E7: } goto IGpM4; IGpM4: if (modstart_config()->getWithEnv('registerDisable', false)) { return Response::generate(-1, '用户注册已禁用'); } goto zvLMh; ZkYd5: $HoLMG = InputPackage::buildFromInput(); goto qxlxa; RFz6Y: if ($mW7Vi['code']) { return Response::generate(-1, $mW7Vi['msg']); } goto Vwx7n; GTmog: $mW7Vi = $Cdaf0->processBindToUser(array('memberUserId' => $H7GUl, 'userInfo' => $jQCZu)); goto qPv2f; VHtDh: } public function oauthCallback($LYyd5 = null, $KEWDy = null) { goto ZvcQu; NOz3B: if (empty($BF1ZP)) { return Response::generate(-1, '登录失败(code为空)', null, '/'); } goto O2Yvt; d_4uO: if (empty($BF1ZP)) { $BF1ZP = $HoLMG->getTrimString('auth_code'); } goto NOz3B; yuuJk: if (empty($KEWDy)) { $KEWDy = $HoLMG->getTrimString('callback', null); } goto w5sjC; ZvcQu: $HoLMG = InputPackage::buildFromInput(); goto DFaAU; DFaAU: if (empty($LYyd5)) { $LYyd5 = $HoLMG->getTrimString('type'); } goto yuuJk; IVyXl: $vvDaY = $HoLMG->getBoolean('view', false); goto ZIhEr; W2q56: return Response::generate(0, 'ok', array('user' => $Z1qO5)); goto Z9bHE; pEk8W: $Z1qO5 = $mW7Vi['data']['userInfo']; goto IVyXl; w5sjC: $BF1ZP = $HoLMG->getTrimString('code'); goto d_4uO; UAqO7: $mW7Vi = $Cdaf0->processLogin(array('code' => $BF1ZP, 'callback' => $KEWDy)); goto kqGBI; kqGBI: if (!isset($mW7Vi['code'])) { return Response::generate(-1, '登录失败(返回结果为空)'); } goto BfyMj; O2Yvt: $Cdaf0 = MemberOauth::getOrFail($LYyd5); goto UAqO7; BfyMj: if (0 != $mW7Vi['code']) { return $mW7Vi; } goto pEk8W; ZIhEr: if ($vvDaY) { Session::put('oauthViewOpenId_' . $LYyd5, $Z1qO5['data']['openid']); return Response::generateSuccess(); } goto xUsqK; xUsqK: Session::put('oauthUserInfo', $Z1qO5); goto W2q56; Z9bHE: } public function oauthLogin($LYyd5 = null, $KEWDy = null) { goto Ix9nZ; Ix9nZ: $HoLMG = InputPackage::buildFromInput(); goto AzaTY; zfzlt: $xo9ms = $HoLMG->getBoolean('silence', false); goto dvTRL; dvTRL: $Cdaf0 = MemberOauth::getOrFail($LYyd5); goto DsM50; DsM50: $mW7Vi = $Cdaf0->processRedirect(array('callback' => $KEWDy, 'silence' => $xo9ms)); goto Zcjbd; Zcjbd: BizException::throwsIfResponseError($mW7Vi); goto esr1i; AzaTY: if (empty($LYyd5)) { $LYyd5 = $HoLMG->getTrimString('type'); } goto czizX; esr1i: return Response::generate(0, 'ok', array('redirect' => $mW7Vi['data']['redirect'])); goto HXF1w; czizX: if (empty($KEWDy)) { $KEWDy = $HoLMG->getTrimString('callback', 'NO_CALLBACK'); } goto zfzlt; HXF1w: } public function ssoClientLogoutPrepare() { goto pR9sT; KN7Ch: $HoLMG = InputPackage::buildFromInput(); goto P9yip; M2RuH: if (empty($lbaLH)) { return Response::generate(-1, '请配置 同步登录服务端地址'); } goto M0_6p; wGVTS: return Response::generate(0, 'ok', array('redirect' => $vB6nX)); goto zj7ss; ivPDx: $lbaLH = modstart_config('ssoClientServer', ''); goto M2RuH; M0_6p: $vB6nX = $lbaLH . '_logout' . '?' . http_build_query(array('redirect' => $RUmbw . '/sso/client_logout')); goto wGVTS; pR9sT: if (!modstart_config('ssoClientEnable', false)) { return Response::generate(-1, '请开启 同步登录客户端'); } goto KN7Ch; P9yip: $RUmbw = $HoLMG->getTrimString('domainUrl'); goto ivPDx; zj7ss: } public function ssoClientLogout() { goto wK7d9; EEpu7: return Response::generate(0, 'ok'); goto Va4wf; wK7d9: if (!modstart_config('ssoClientEnable', false)) { return Response::generate(-1, '请开启 同步登录客户端'); } goto GusgA; GusgA: Session::forget('memberUserId'); goto EEpu7; Va4wf: } public function ssoServerLogout() { goto Kw7Su; Kw7Su: if (!modstart_config('ssoServerEnable', false)) { return Response::generate(-1, '请开启 同步登录服务端'); } goto DzuHq; DzuHq: Session::forget('memberUserId'); goto F6biS; F6biS: return Response::generate(0, 'ok'); goto ebDEE; ebDEE: } public function ssoServerSuccess() { goto iXaou; t2QHe: $xwlRz = explode('
', modstart_config('ssoServerClientList', '')); goto yjoiv; M332q: $dVL9O = time(); goto eD7qL; LVf9G: $HoLMG = InputPackage::buildFromInput(); goto kWtvE; G18Mi: if (!$H7GUl) { return Response::generate(-1, '未登录'); } goto z1gEx; WuXAL: if (empty($Xl17R)) { return Response::generate(-1, '请设置 同步登录服务端通讯秘钥'); } goto LVf9G; vonX0: $H7GUl = Session::get('memberUserId', 0); goto G18Mi; iXaou: if (!modstart_config('ssoServerEnable', false)) { return Response::generate(-1, '请开启 同步登录服务端'); } goto vonX0; yKRAd: return Response::generate(0, null, array('redirect' => $vB6nX)); goto WYHf_; dLM08: $Xl17R = modstart_config('ssoServerSecret'); goto WuXAL; sVYxB: $RUmbw = $HoLMG->getTrimString('domainUrl'); goto VDdkf; z1gEx: $qe8fj = MemberUtil::get($H7GUl); goto dLM08; eD7qL: $W03l4 = $qe8fj['username']; goto f8CeC; E2FeM: $vB6nX = $bboet . '?server=' . urlencode($FqhAC) . '&timestamp=' . $dVL9O . '&username=' . urlencode(base64_encode($W03l4)) . '&sign=' . $uCmst; goto yKRAd; VDdkf: if (empty($RUmbw) || empty($bboet)) { return Response::generate(-1, '数据错误'); } goto t2QHe; yjoiv: $WeMO7 = false; goto uk1Yk; jQcq1: $FqhAC = $RUmbw . '/sso/server'; goto M332q; SIaGB: if (!$WeMO7) { return Response::generate(-1, '数据错误(2)'); } goto jQcq1; kWtvE: $bboet = $HoLMG->getTrimString('client'); goto sVYxB; uk1Yk: foreach ($xwlRz as $KdsT8) { if (trim($KdsT8) == $bboet) { $WeMO7 = true; } } goto SIaGB; f8CeC: $uCmst = md5(md5($Xl17R) . md5($dVL9O . '') . md5($FqhAC) . md5($W03l4)); goto E2FeM; WYHf_: } public function ssoServer() { goto ziLXk; xxmou: if (empty($uCmst)) { return Response::generate(-1, 'sign 为空'); } goto ygCfU; lWAwk: foreach ($xwlRz as $KdsT8) { if (trim($KdsT8) == $bboet) { $WeMO7 = true; } } goto glTRo; A7b1E: if (empty($hVEaj)) { return Response::generate(-1, '请设置 同步登录服务端通讯秘钥'); } goto LPDAe; AlWxA: if (intval(Session::get('memberUserId', 0)) > 0) { $RePYN = true; } goto mjtv7; nOwc2: $WeMO7 = false; goto lWAwk; XQTtp: $xwlRz = explode('
', modstart_config('ssoServerClientList', '')); goto nOwc2; rIyJb: if (empty($dVL9O)) { return Response::generate(-1, 'timestamp 为空'); } goto xxmou; ziLXk: if (!modstart_config('ssoServerEnable', false)) { return Response::generate(-1, '请开启 同步登录服务端'); } goto CI6t1; LPDAe: $ax1CP = md5(md5($hVEaj) . md5($dVL9O . '') . md5($bboet)); goto yZGVb; glTRo: if (!$WeMO7) { return Response::generate(-1, '请在 同步登陆服务端增加客户端地址 ' . $bboet); } goto o6ltz; uZFup: $dVL9O = $HoLMG->getInteger('timestamp'); goto ok7hq; ygCfU: $hVEaj = modstart_config('ssoServerSecret'); goto A7b1E; uzDkA: if (empty($bboet)) { return Response::generate(-1, 'client 为空'); } goto rIyJb; CI6t1: $HoLMG = InputPackage::buildFromInput(); goto dymp8; yZGVb: if ($uCmst != $ax1CP) { return Response::generate(-1, 'sign 错误'); } goto yPNrm; o6ltz: $RePYN = false; goto AlWxA; dymp8: $bboet = $HoLMG->getTrimString('client'); goto uZFup; yPNrm: if (abs(time() - $dVL9O) > 3600) { return Response::generate(-1, 'timestamp 错误'); } goto XQTtp; mjtv7: return Response::generate(0, 'ok', array('isLogin' => $RePYN)); goto o9m46; ok7hq: $uCmst = $HoLMG->getTrimString('sign'); goto uzDkA; o9m46: } public function ssoClient() { goto LUdYp; QrehJ: Session::put('memberUserId', $qe8fj['id']); goto Go4N_; pgz_8: $dVL9O = $HoLMG->getInteger('timestamp'); goto Moaed; ctkhz: if (empty($lbaLH)) { return Response::generate(-1, '请配置 同步登录服务端地址'); } goto bAn8B; bAn8B: $w5hFc = modstart_config('ssoClientSecret'); goto L9iYd; O_bXH: $lbaLH = modstart_config('ssoClientServer', ''); goto ctkhz; rR5Xv: $W03l4 = @base64_decode($HoLMG->getTrimString('username')); goto PpZL3; n5dVG: if (empty($uCmst)) { return Response::generate(-1, 'sign为空'); } goto EqNQA; hwFAk: $FqhAC = $HoLMG->getTrimString('server'); goto pgz_8; EqNQA: $ax1CP = md5(md5($w5hFc) . md5($dVL9O . '') . md5($FqhAC) . md5($W03l4)); goto NLq0o; axXdw: $qe8fj = MemberUtil::getByUsername($W03l4); goto q6H3L; Moaed: $uCmst = $HoLMG->getTrimString('sign'); goto rR5Xv; Go4N_: return Response::generate(0, 'ok'); goto Ecs9T; NLq0o: if ($uCmst != $ax1CP) { return Response::generate(-1, 'sign错误'); } goto LL6CN; L9iYd: if (empty($w5hFc)) { return Response::generate(-1, '请设置 同步登录客户端通讯秘钥'); } goto z5jSq; V8isV: if ($FqhAC != $lbaLH) { return Response::generate(-1, '同步登录 服务端地址不是配置的' . $lbaLH); } goto axXdw; LL6CN: if (abs(time() - $dVL9O) > 3600) { return Response::generate(-1, 'timestamp错误'); } goto V8isV; LUdYp: if (!modstart_config('ssoClientEnable', false)) { return Response::generate(-1, '请开启 同步登录客户端'); } goto O_bXH; XG40H: if (empty($dVL9O)) { return Response::generate(-1, 'timestamp为空'); } goto n5dVG; PpZL3: if (empty($W03l4)) { return Response::generate(-1, '同步登录返回的用户名为空'); } goto XG40H; z5jSq: $HoLMG = InputPackage::buildFromInput(); goto hwFAk; q6H3L: if (empty($qe8fj)) { goto qFc9E; WT_92: $qe8fj = MemberUtil::get($mW7Vi['data']['id']); goto R0cD1; qFc9E: $mW7Vi = MemberUtil::register($W03l4, null, null, null, true); goto BCTpY; BCTpY: if ($mW7Vi['code']) { return Response::generate(-1, $mW7Vi['msg']); } goto WT_92; R0cD1: } goto QrehJ; Ecs9T: } public function ssoClientPrepare() { goto w_Kxy; YHNVA: $vB6nX = $lbaLH . '?client=' . urlencode($bboet) . '&timestamp=' . $dVL9O . '&sign=' . $uCmst; goto BiMvc; WjtGf: $lbaLH = modstart_config('ssoClientServer'); goto CAgO2; CAgO2: $w5hFc = modstart_config('ssoClientSecret'); goto MJy1z; w_Kxy: if (!modstart_config('ssoClientEnable', false)) { return Response::generate(-1, 'SSO未开启'); } goto WjtGf; Q_oS3: $dVL9O = time(); goto J0YxD; JcRuT: $bboet = $HoLMG->getTrimString('client', '/'); goto Emh4N; MJy1z: $HoLMG = InputPackage::buildFromInput(); goto JcRuT; J0YxD: $uCmst = md5(md5($w5hFc) . md5($dVL9O . '') . md5($bboet)); goto YHNVA; BiMvc: return Response::generate(0, 'ok', array('redirect' => $vB6nX)); goto p5smU; Emh4N: if (!Str::endsWith($bboet, '/sso/client')) { return Response::generate(-1, 'client参数错误'); } goto Q_oS3; p5smU: } public function logout() { Session::forget('memberUserId'); return Response::generateSuccess(); } public function login() { goto vz1Cr; DAyVm: if (!$qe8fj) { $mW7Vi = MemberUtil::login(null, $W03l4, null, $cF9sV); if (0 == $mW7Vi['code']) { $qe8fj = $mW7Vi['data']; } } goto LILy9; sxYRm: Session::put('memberUserId', $qe8fj['id']); goto zu9RH; mYiDv: $W03l4 = $HoLMG->getTrimString('username'); goto fzvQI; LILy9: if (!$qe8fj) { $mW7Vi = MemberUtil::login(null, null, $W03l4, $cF9sV); if (0 == $mW7Vi['code']) { $qe8fj = $mW7Vi['data']; } } goto B5qq4; QyAAf: if (empty($W03l4)) { return Response::generate(-1, '请输入用户'); } goto dVBOo; dVBOo: if (empty($cF9sV)) { return Response::generate(-1, '请输入密码'); } goto RRHAT; B5qq4: if (!$qe8fj) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '登录失败'); } goto sxYRm; ofyeK: $qe8fj = null; goto GZT4g; LORfE: return Response::generateSuccess(); goto hDQbV; zu9RH: EventUtil::fire(new MemberUserLoginedEvent($qe8fj['id'])); goto LORfE; vz1Cr: $HoLMG = InputPackage::buildFromInput(); goto mYiDv; fzvQI: $cF9sV = $HoLMG->getTrimString('password'); goto QyAAf; GZT4g: if (!$qe8fj) { $mW7Vi = MemberUtil::login($W03l4, null, null, $cF9sV); if (0 == $mW7Vi['code']) { $qe8fj = $mW7Vi['data']; } } goto DAyVm; RRHAT: if (modstart_config('loginCaptchaEnable', false)) { $zQ8Zn = modstart_config('loginCaptchaProvider', null); if ($zQ8Zn) { $mW7Vi = CaptchaProvider::get($zQ8Zn)->validate(); if (Response::isError($mW7Vi)) { return $mW7Vi; } } else { if (!CaptchaFacade::check($HoLMG->getTrimString('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '图片验证码错误', null, '[js]$(\'[data-captcha]\').click();'); } } } goto ofyeK; hDQbV: } public function loginCaptchaRaw() { return CaptchaFacade::create('default'); } public function loginCaptcha() { $Nd07J = $this->loginCaptchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Nd07J->getOriginalContent()))); } public function register() { goto D53rt; K1Rvj: foreach (MemberRegisterProcessorProvider::listAll() as $Y2SRS) { $Y2SRS->postProcess($H7GUl); } goto qmRWc; Of_Tt: $cF9sV = $HoLMG->getTrimString('password'); goto BnGLW; Grpkj: if (Str::contains($W03l4, '@')) { return Response::generate(-1, '用户名不能包含特殊字符'); } goto Ihn_k; cpYST: if (modstart_config('registerEmailEnable')) { goto qgCEc; KAWMM: if (Session::get('registerEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(-1, '邮箱验证码已过期'); } goto lgitM; qgCEc: if (empty($plRSP)) { return Response::generate(-1, '请输入邮箱'); } goto v3Myu; lgitM: if ($plRSP != Session::get('registerEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto Vrg3v; v3Myu: if ($qlcYE != Session::get('registerEmailVerify')) { return Response::generate(-1, '邮箱验证码不正确.'); } goto KAWMM; Vrg3v: } goto k2SVW; Zrbmm: $plRSP = $HoLMG->getEmail('email'); goto bMUls; Ihn_k: if (preg_match('/^\\d{11}$/', $W03l4)) { return Response::generate(-1, '用户名不能为纯数字'); } goto AbHm4; qPcSG: $HoLMG = InputPackage::buildFromInput(); goto rI74x; aNgQt: if ($mW7Vi['code']) { return Response::generate(-1, $mW7Vi['msg']); } goto cgRPM; lKyTa: foreach (MemberRegisterProcessorProvider::listAll() as $Y2SRS) { $mW7Vi = $Y2SRS->preCheck(); if (Response::isError($mW7Vi)) { return $mW7Vi; } } goto NZM3r; SWFJo: if (empty($W03l4)) { return Response::generate(-1, '用户名不能为空'); } goto Grpkj; nmoYp: $xHL4s = $HoLMG->getTrimString('phoneVerify'); goto Zrbmm; qmRWc: return Response::generate(0, '注册成功', array('id' => $H7GUl)); goto jJoqX; bMUls: $qlcYE = $HoLMG->getTrimString('emailVerify'); goto Of_Tt; uYKIm: $ZagfX = array(); goto iLOPl; rI74x: if (modstart_config('Member_AgreementEnable', false)) { if (!$HoLMG->getBoolean('agreement')) { return Response::generateError('请先同意 ' . modstart_config('Member_AgreementTitle', '用户使用协议')); } } goto q8Mjf; AbHm4: if (!Session::get('registerCaptchaPass', false)) { if (!CaptchaFacade::check($Nd07J)) { SessionUtil::atomicProduce('registerCaptchaPassCount', 1); return Response::generate(-1, '图片验证失败'); } } goto zyQzK; d6wHD: if (modstart_config('registerPhoneEnable')) { goto DkjOC; GdkQG: if (Session::get('registerPhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(-1, '手机验证码已过期'); } goto nqo_t; nqo_t: if ($dEdul != Session::get('registerPhone')) { return Response::generate(-1, '两次手机不一致'); } goto gOm6e; MTmfv: if ($xHL4s != Session::get('registerPhoneVerify')) { return Response::generate(-1, '手机验证码不正确.'); } goto GdkQG; DkjOC: if (empty($dEdul)) { return Response::generate(-1, '请输入手机'); } goto MTmfv; gOm6e: } goto cpYST; k2SVW: if (empty($cF9sV)) { return Response::generate(-1, '请输入密码'); } goto KXG22; Rb1OV: if (modstart_config('registerEmailEnable')) { $ZagfX['emailVerified'] = true; } goto NDS4f; zyQzK: if (!SessionUtil::atomicConsume('registerCaptchaPassCount')) { return Response::generate(-1, '请重新输入图片验证码'); } goto d6wHD; VU1_K: $dEdul = $HoLMG->getPhone('phone'); goto nmoYp; BnGLW: $DRH_7 = $HoLMG->getTrimString('passwordRepeat'); goto u3V50; D53rt: if (modstart_config('registerDisable', false)) { return Response::generate(-1, '禁止注册'); } goto qPcSG; g2s4v: Session::forget('registerCaptchaPass'); goto K1Rvj; NZM3r: $mW7Vi = MemberUtil::register($W03l4, $dEdul, $plRSP, $cF9sV); goto aNgQt; KXG22: if ($cF9sV != $DRH_7) { return Response::generate(-1, '两次输入密码不一致'); } goto lKyTa; iLOPl: if (modstart_config('registerPhoneEnable')) { $ZagfX['phoneVerified'] = true; } goto Rb1OV; u3V50: $Nd07J = $HoLMG->getTrimString('captcha'); goto SWFJo; NDS4f: if (!empty($ZagfX)) { MemberUtil::update($H7GUl, $ZagfX); } goto PDXdf; q8Mjf: $W03l4 = $HoLMG->getTrimString('username'); goto VU1_K; cgRPM: $H7GUl = $mW7Vi['data']['id']; goto uYKIm; PDXdf: EventUtil::fire(new MemberUserRegisteredEvent($H7GUl)); goto g2s4v; jJoqX: } public function registerEmailVerify() { goto vSvxH; csU6Z: $HoLMG = InputPackage::buildFromInput(); goto ZY4RA; vSvxH: if (modstart_config('registerDisable', false)) { return Response::generate(-1, '禁止注册'); } goto GvxFz; FVduQ: MailSendJob::create($plRSP, '注册账户验证码', 'verify', array('code' => $GF17O)); goto QYef9; YH_Zv: Session::put('registerEmailVerifyTime', time()); goto DlYwu; UBWX4: if (!SessionUtil::atomicConsume('registerCaptchaPassCount')) { return Response::generate(-1, '请重新输入图片验证码'); } goto G92As; H4hlp: $GF17O = rand(100000, 999999); goto JGyQg; ZY4RA: $plRSP = $HoLMG->getEmail('target'); goto LvmAi; GvxFz: if (!modstart_config('registerEmailEnable')) { return Response::generate(-1, '注册未开启邮箱'); } goto csU6Z; rxcC1: if (!empty($qe8fj)) { return Response::generate(-1, '邮箱已经被占用'); } goto ni2aw; h1Hp_: if (!Session::get('registerCaptchaPass', false)) { return Response::generate(-1, '请先验证图片验证码'); } goto UBWX4; DlYwu: Session::put('registerEmail', $plRSP); goto FVduQ; QYef9: return Response::generate(0, '验证码发送成功'); goto qtl4Y; LvmAi: if (empty($plRSP)) { return Response::generate(-1, '邮箱不能为空'); } goto h1Hp_; JGyQg: Session::put('registerEmailVerify', $GF17O); goto YH_Zv; G92As: $qe8fj = MemberUtil::getByEmail($plRSP); goto rxcC1; ni2aw: if (Session::get('registerEmailVerifyTime') && $plRSP == Session::get('registerEmail')) { if (Session::get('registerEmailVerifyTime') + 60 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto H4hlp; qtl4Y: } public function registerPhoneVerify() { goto enq62; Hp9t_: if (!modstart_config('registerPhoneEnable')) { return Response::generate(-1, '注册未开启手机'); } goto Gxn4k; t1TMS: return Response::generate(0, '验证码发送成功'); goto XQQ3J; oQWmx: Session::put('registerPhoneVerify', $GF17O); goto NRQyI; Ei7gZ: $mW7Vi = SmsUtil::send($dEdul, 'verify', array('code' => $GF17O)); goto t1TMS; FGZFW: $GF17O = rand(100000, 999999); goto oQWmx; iR4DC: if (empty($dEdul)) { return Response::generate(-1, '手机不能为空'); } goto Ik8tG; PSv1E: $qe8fj = MemberUtil::getByPhone($dEdul); goto N12I8; WnNLX: Session::put('registerPhone', $dEdul); goto Ei7gZ; Ik8tG: if (!Session::get('registerCaptchaPass', false)) { return Response::generate(-1, '请先验证图片验证码'); } goto k647p; enq62: if (modstart_config('registerDisable', false)) { return Response::generate(-1, '禁止注册'); } goto Hp9t_; NRQyI: Session::put('registerPhoneVerifyTime', time()); goto WnNLX; N12I8: if (!empty($qe8fj)) { return Response::generate(-1, '手机已经被占用'); } goto i3OS8; i3OS8: if (Session::get('registerPhoneVerifyTime') && $dEdul == Session::get('registerPhone')) { if (Session::get('registerPhoneVerifyTime') + 60 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto FGZFW; k647p: if (!SessionUtil::atomicConsume('registerCaptchaPassCount')) { return Response::generate(-1, '请重新输入图片验证码'); } goto PSv1E; Gxn4k: $HoLMG = InputPackage::buildFromInput(); goto jJ2Lu; jJ2Lu: $dEdul = $HoLMG->getPhone('target'); goto iR4DC; XQQ3J: } public function registerCaptchaVerify() { goto pcLAp; SxId_: if (modstart_config('registerPhoneEnable')) { $UaqJ1++; } goto OWIeD; pcLAp: $HoLMG = InputPackage::buildFromInput(); goto Z0_lB; g8gni: if (modstart_config('registerEmailEnable')) { $UaqJ1++; } goto SxId_; Ff2LG: $UaqJ1 = 1; goto g8gni; olfc8: return Response::generateSuccess(); goto UNh1T; OWIeD: SessionUtil::atomicProduce('registerCaptchaPassCount', $UaqJ1); goto olfc8; Z0_lB: $Nd07J = $HoLMG->getTrimString('captcha'); goto RJZBi; RJZBi: if (!CaptchaFacade::check($Nd07J)) { SessionUtil::atomicRemove('registerCaptchaPassCount'); return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto g2ePZ; g2ePZ: Session::put('registerCaptchaPass', true); goto Ff2LG; UNh1T: } public function registerCaptchaRaw() { return CaptchaFacade::create('default'); } public function registerCaptcha() { goto goIcX; g2cwa: $Nd07J = $this->registerCaptchaRaw(); goto akjxA; akjxA: return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Nd07J->getOriginalContent()))); goto QSUGp; goIcX: Session::forget('registerCaptchaPass'); goto g2cwa; QSUGp: } public function retrievePhone() { goto GIqgf; PPX0Y: $GF17O = $HoLMG->getTrimString('verify'); goto FALhb; hLWEq: return Response::generate(0, null); goto HffCn; VrxqL: Session::put('retrieveMemberUserId', $qe8fj['id']); goto hLWEq; vx9co: if (Session::get('retrievePhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '手机验证码已过期'); } goto Ol62R; EPtgs: if ($GF17O != Session::get('retrievePhoneVerify')) { return Response::generate(-1, '手机验证码不正确'); } goto vx9co; YCYw1: if (!modstart_config('retrievePhoneEnable', false)) { return Response::generate(-1, '找回密码没有开启'); } goto SF3dk; pR7cM: $qe8fj = MemberUtil::getByPhone($dEdul); goto AdQn8; TcAfQ: if (empty($GF17O)) { return Response::generate(-1, '验证码不能为空'); } goto EPtgs; whfye: Session::forget('retrievePhone'); goto VrxqL; fnrud: Session::forget('retrievePhoneVerifyTime'); goto whfye; GIqgf: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto Guj2K; FALhb: if (empty($dEdul)) { return Response::generate(-1, '手机为空或不正确'); } goto TcAfQ; Ol62R: if ($dEdul != Session::get('retrievePhone')) { return Response::generate(-1, '两次手机不一致'); } goto pR7cM; Guj2K: $HoLMG = InputPackage::buildFromInput(); goto YCYw1; AdQn8: if (empty($qe8fj)) { return Response::generate(-1, '手机没有绑定任何账号'); } goto GW2zK; SF3dk: $dEdul = $HoLMG->getPhone('phone'); goto PPX0Y; GW2zK: Session::forget('retrievePhoneVerify'); goto fnrud; HffCn: } public function retrievePhoneVerify() { goto UNhdI; r2Rb6: if (empty($qe8fj)) { return Response::generate(-1, '手机没有绑定任何账号'); } goto FebDN; VecD7: $Nd07J = $HoLMG->getTrimString('captcha'); goto UZI3x; HMKoE: $qe8fj = MemberUtil::getByPhone($dEdul); goto r2Rb6; E2Ttz: $HoLMG = InputPackage::buildFromInput(); goto eKVyw; eBvhN: return Response::generate(0, '验证码发送成功'); goto DJdy3; UZI3x: if (!CaptchaFacade::check($Nd07J)) { return Response::generate(-1, '图片验证码错误'); } goto HMKoE; FebDN: if (Session::get('retrievePhoneVerifyTime') && $dEdul == Session::get('retrievePhone')) { if (Session::get('retrievePhoneVerifyTime') + 60 * 2 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto q9Koa; aXW7Y: if (empty($dEdul)) { return Response::generate(-1, '手机为空或格式不正确'); } goto VecD7; eKVyw: $dEdul = $HoLMG->getPhone('target'); goto aXW7Y; xUXD3: Session::put('retrievePhoneVerifyTime', time()); goto Wbw0Y; Iz9ig: SmsUtil::send($dEdul, 'verify', array('code' => $GF17O)); goto eBvhN; q9Koa: $GF17O = rand(100000, 999999); goto IGn3u; IGn3u: Session::put('retrievePhoneVerify', $GF17O); goto xUXD3; UNhdI: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto E2Ttz; Wbw0Y: Session::put('retrievePhone', $dEdul); goto Iz9ig; DJdy3: } public function retrieveEmail() { goto EtAyg; NSDDo: return Response::generate(0, null); goto dw56z; M9JBM: $plRSP = $HoLMG->getEmail('email'); goto DAd4P; YV3Y3: Session::put('retrieveMemberUserId', $qe8fj['id']); goto NSDDo; Pqem2: $HoLMG = InputPackage::buildFromInput(); goto M9JBM; rGm4g: if (empty($plRSP)) { return Response::generate(-1, '邮箱为空或格式不正确'); } goto xGgKt; EtAyg: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto yncIE; TYUB5: Session::forget('retrieveEmailVerifyTime'); goto jZzar; xGgKt: if (empty($GF17O)) { return Response::generate(-1, '验证码不能为空'); } goto NqMZH; jZzar: Session::forget('retrieveEmail'); goto YV3Y3; NqMZH: if ($GF17O != Session::get('retrieveEmailVerify')) { return Response::generate(-1, '邮箱验证码不正确'); } goto auwxN; DAd4P: $GF17O = $HoLMG->getTrimString('verify'); goto rGm4g; auwxN: if (Session::get('retrieveEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '邮箱验证码已过期'); } goto AhFH3; yncIE: if (!modstart_config('retrieveEmailEnable', false)) { return Response::generate(-1, '找回密码没有开启'); } goto Pqem2; v8Gqg: if (empty($qe8fj)) { return Response::generate(-1, '邮箱没有绑定任何账号'); } goto dieqS; dieqS: Session::forget('retrieveEmailVerify'); goto TYUB5; PrGiJ: $qe8fj = MemberUtil::getByEmail($plRSP); goto v8Gqg; AhFH3: if ($plRSP != Session::get('retrieveEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto PrGiJ; dw56z: } public function retrieveEmailVerify() { goto Cfghg; e82NI: $GF17O = rand(100000, 999999); goto Unh3O; HSghV: return Response::generate(0, '验证码发送成功'); goto xO7rE; dEJkf: Session::put('retrieveEmail', $plRSP); goto xyxCV; ihAtL: Session::put('retrieveEmailVerifyTime', time()); goto dEJkf; ypPOn: if (empty($plRSP)) { return Response::generate(-1, '邮箱格式不正确或为空'); } goto wqifS; wqifS: $Nd07J = $HoLMG->getTrimString('captcha'); goto gVQuC; xyxCV: MailSendJob::create($plRSP, '找回密码验证码', 'verify', array('code' => $GF17O)); goto HSghV; Zyz83: $qe8fj = MemberUtil::getByEmail($plRSP); goto g804W; AgVFY: if (Session::get('retrieveEmailVerifyTime') && $plRSP == Session::get('retrieveEmail')) { if (Session::get('retrieveEmailVerifyTime') + 60 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto e82NI; Unh3O: Session::put('retrieveEmailVerify', $GF17O); goto ihAtL; eZGwu: $plRSP = $HoLMG->getEmail('target'); goto ypPOn; g804W: if (empty($qe8fj)) { return Response::generate(-1, '邮箱没有绑定任何账号'); } goto AgVFY; gVQuC: if (!CaptchaFacade::check($Nd07J)) { return Response::generate(-1, '图片验证码错误'); } goto Zyz83; Cfghg: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto znf_B; znf_B: $HoLMG = InputPackage::buildFromInput(); goto eZGwu; xO7rE: } public function retrieveResetInfo() { goto NjuKg; NjuKg: $haWw_ = Session::get('retrieveMemberUserId'); goto oCyEw; CAPk3: if (empty($W03l4)) { $W03l4 = $qe8fj['phone']; } goto U2MWm; oCyEw: if (empty($haWw_)) { return Response::generate(-1, '请求错误'); } goto LJ3we; LJ3we: $qe8fj = MemberUtil::get($haWw_); goto AOxR8; AOxR8: $W03l4 = $qe8fj['username']; goto CAPk3; YPaiG: return Response::generate(0, null, array('memberUser' => array('username' => $W03l4))); goto D1sqy; U2MWm: if (empty($W03l4)) { $W03l4 = $qe8fj['email']; } goto YPaiG; D1sqy: } public function retrieveReset() { goto yZgqd; mF2iX: Session::forget('retrieveMemberUserId'); goto QLzTS; quRIm: if (empty($haWw_)) { return Response::generate(-1, '请求错误'); } goto Pk0dP; vkrE4: EventUtil::fire(new MemberUserPasswordResetedEvent($qe8fj['id'], $cF9sV)); goto mF2iX; A6vtu: $qe8fj = MemberUtil::get($haWw_); goto b6QDH; UU2dv: if ($cF9sV != $DRH_7) { return Response::generate(-1, '两次输入密码不一致'); } goto A6vtu; Ix3iD: $haWw_ = Session::get('retrieveMemberUserId'); goto quRIm; yZgqd: if (modstart_config('retrieveDisable', false)) { return Response::generate(-1, '找回密码已禁用'); } goto WJQgM; QLzTS: return Response::generate(0, '成功设置新密码,请您登录'); goto W1xuZ; QGt9B: if ($mW7Vi['code']) { return Response::generate(-1, $mW7Vi['msg']); } goto vkrE4; b6QDH: if (empty($qe8fj)) { return Response::generate(-1, '用户不存在'); } goto BLPJ3; WJQgM: $HoLMG = InputPackage::buildFromInput(); goto Ix3iD; BLPJ3: $mW7Vi = MemberUtil::changePassword($qe8fj['id'], $cF9sV, null, true); goto QGt9B; srrqu: if (empty($cF9sV)) { return Response::generate(-1, '请输入密码'); } goto UU2dv; Pk0dP: $cF9sV = $HoLMG->getTrimString('password'); goto VG2xN; VG2xN: $DRH_7 = $HoLMG->getTrimString('passwordRepeat'); goto srrqu; W1xuZ: } public function retrieveCaptchaRaw() { return CaptchaFacade::create('default'); } public function retrieveCaptcha() { $Nd07J = $this->retrieveCaptchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Nd07J->getOriginalContent()))); } }