<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\LazyValue; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Job\BaseJob; use Module\Vendor\Log\Logger; class LazyValueJob extends BaseJob { private $key; private $param; private $cacheSeconds; public function __construct($T_BMM, $HAqS9, $pES2B) { goto fLiO3; DRCZY: $this->cacheSeconds = $pES2B; goto YL9Ia; rjqtM: $this->param = $HAqS9; goto DRCZY; fLiO3: $this->key = $T_BMM; goto rjqtM; YL9Ia: } public static function create($T_BMM, $HAqS9, $pES2B) { goto K5Yp5; OBtQx: app('Illuminate\\Contracts\\Bus\\Dispatcher')->dispatch($FRS1x); goto zy5EQ; K5Yp5: $FRS1x = new LazyValueJob($T_BMM, $HAqS9, $pES2B); goto DLsEf; DLsEf: $FRS1x->onQueue('LazyValueJob'); goto OBtQx; zy5EQ: } public static function createRefresh($T_BMM, $HAqS9, $pES2B) { goto ni15v; RoLp1: app('Illuminate\\Contracts\\Bus\\Dispatcher')->dispatch($FRS1x); goto D18LH; ni15v: $FRS1x = new LazyValueJob($T_BMM, $HAqS9, $pES2B); goto Hl66B; Hl66B: $FRS1x->onQueue('LazyValueJobRefresh'); goto RoLp1; D18LH: } public function handle() { goto wIDHW; r01xg: Logger::info('LazyValueJob', 'Result', $Xiug2); goto UgP1f; R_LIW: Logger::info('LazyValueJob', 'Start', array($this->key, $this->cacheSeconds, $this->param)); goto wUPmK; VYQ77: if (empty($yW9Fd)) { throw new \Exception('LazyValueJob.Error : you should define lazy_value_processor_roots in config/app.php file'); } goto ukUMR; ukUMR: $Bd0bt = false; goto WLBzM; UgP1f: ModelUtil::update('lazy_value', array('key' => $this->key, 'param' => json_encode($this->param)), array('expire' => time() + $this->cacheSeconds, 'value' => json_encode($Xiug2))); goto P1O9W; wUPmK: $yW9Fd = config('app.lazy_value_processor_roots', array()); goto VYQ77; WLBzM: foreach ($yW9Fd as $BC1UO) { $z70jx = $BC1UO . '\\' . $this->key . 'Processor'; if (class_exists($z70jx)) { goto ecF2v; ubdfp: $Xiug2 = $Di_PY->execute($this->param); goto IIkHW; IIkHW: $Bd0bt = true; goto bfgEt; ecF2v: $Di_PY = new $z70jx(); goto ubdfp; bfgEt: } } goto mW9H1; wIDHW: $mVM8d = time(); goto R_LIW; mW9H1: if (!$Bd0bt) { throw new \Exception('LazyValueJob.Error : could not found processor ' . $this->key); } goto r01xg; P1O9W: Logger::info('LazyValueJob', 'End'); goto ATMpR; ATMpR: } }