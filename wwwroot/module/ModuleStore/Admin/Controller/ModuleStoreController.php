<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\ModuleStore\Admin\Controller; use Illuminate\Routing\Controller; use ModStart\Admin\Auth\AdminPermission; use ModStart\Admin\Layout\AdminConfigBuilder; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\CRUDUtil; use ModStart\Core\Util\FileUtil; use ModStart\Core\Util\ReUtil; use ModStart\Form\Form; use ModStart\Module\ModuleManager; use ModStart\Repository\RepositoryUtil; use Module\ModuleStore\Util\ModuleStoreUtil; class ModuleStoreController extends Controller { public function index() { AdminPermission::permitCheck('ModuleStoreManage'); return view('module::ModuleStore.View.admin.moduleStore.index'); } public function all() { AdminPermission::permitCheck('ModuleStoreManage'); return Response::generateSuccessData(ModuleStoreUtil::all()); } private function moduleOperateCheck($VLCiR) { goto bUIZc; VtGBR: if (empty($gJkbH)) { return; } goto EXtWM; Pz2DI: BizException::throwsIf('只允许操作模块:' . join(',', $gJkbH), !$kFyvK); goto ssMLR; uBdMu: $gJkbH = array_filter($gJkbH); goto nLqhv; t_31q: $kFyvK = false; goto EQxAt; UKyQJ: $gJkbH = config('env.MS_MODULE_WHITELIST', ''); goto VtGBR; EQxAt: foreach ($gJkbH as $KdsT8) { if (ReUtil::isWildMatch($KdsT8, $VLCiR)) { $kFyvK = true; break; } } goto Pz2DI; bUIZc: BizException::throwsIf('当前环境禁止「模块管理」相关操作', config('env.MS_MODULE_STORE_DISABLE', false)); goto UKyQJ; EXtWM: $gJkbH = array_map(function ($aEiYS) { return trim($aEiYS); }, explode(',', $gJkbH)); goto uBdMu; nLqhv: if (empty($gJkbH)) { return; } goto t_31q; ssMLR: } private function doFinish($N9oEa) { return Response::generateSuccessData(array('msg' => array_map(function ($KdsT8) { return '<i class="iconfont icon-hr"></i> ' . $KdsT8; }, $N9oEa), 'finish' => true)); } private function doNext($OWM9v, $gGKO8, $N9oEa = array(), $hRWBB = array()) { goto UtY2l; Wtf6G: $hRWBB = array_merge($HoLMG->getJsonAsInput('data')->all(), $hRWBB); goto XKc0u; UtY2l: $HoLMG = InputPackage::buildFromInput(); goto Wtf6G; XKc0u: return Response::generateSuccessData(array('msg' => array_map(function ($KdsT8) { if (!starts_with($KdsT8, '<')) { $KdsT8 = "<span class='ub-text-white'>{$KdsT8}</span>"; } return '<i class="iconfont icon-hr"></i> ' . $KdsT8; }, $N9oEa), 'command' => $OWM9v, 'step' => $gGKO8, 'data' => $hRWBB, 'finish' => false)); goto Bh6Px; Bh6Px: } public function disable() { goto C3Zr4; q6yxC: BizException::throwsIfEmpty('version为空', $k8iQn); goto dd0OX; HyMWi: switch ($gGKO8) { default: goto gPuqB; gPuqB: $mW7Vi = ModuleManager::disable($VLCiR); goto I9rZb; I9rZb: BizException::throwsIfResponseError($mW7Vi); goto I6jpe; I6jpe: return $this->doFinish(array('<span class="ub-text-success">禁用成功，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>')); goto GuLnS; GuLnS: } goto aUE0r; s3n4I: BizException::throwsIfEmpty('module为空', $VLCiR); goto q6yxC; Wx5UN: $HoLMG = InputPackage::buildFromInput(); goto GN8R9; TZ3_Q: $VLCiR = $tlqSz->getTrimString('module'); goto lQ0eI; n0R3y: AdminPermission::demoCheck(); goto Wx5UN; GN8R9: $gGKO8 = $HoLMG->getTrimString('step'); goto Uc1KE; C3Zr4: AdminPermission::permitCheck('ModuleStoreManage'); goto n0R3y; Uc1KE: $tlqSz = $HoLMG->getJsonAsInput('data'); goto TZ3_Q; lQ0eI: $k8iQn = $tlqSz->getTrimString('version'); goto s3n4I; dd0OX: $this->moduleOperateCheck($VLCiR); goto HyMWi; aUE0r: } public function enable() { goto I9nzj; tqdWd: $k8iQn = $tlqSz->getTrimString('version'); goto zQwBq; bKtA5: switch ($gGKO8) { default: goto ynP0W; k_IMI: return $this->doFinish(array('<span class="ub-text-success">启动成功，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>')); goto i49Kn; ynP0W: $mW7Vi = ModuleManager::enable($VLCiR); goto ZB_lr; ZB_lr: BizException::throwsIfResponseError($mW7Vi); goto k_IMI; i49Kn: } goto MWBGS; DksR5: BizException::throwsIfEmpty('version为空', $k8iQn); goto YNJG3; I9nzj: AdminPermission::permitCheck('ModuleStoreManage'); goto tdWxZ; Qky8I: $HoLMG = InputPackage::buildFromInput(); goto ZPLl4; YNJG3: $this->moduleOperateCheck($VLCiR); goto bKtA5; tdWxZ: AdminPermission::demoCheck(); goto Qky8I; zQwBq: BizException::throwsIfEmpty('module为空', $VLCiR); goto DksR5; ZPLl4: $gGKO8 = $HoLMG->getTrimString('step'); goto b9LhN; zwVmW: $VLCiR = $tlqSz->getTrimString('module'); goto tqdWd; b9LhN: $tlqSz = $HoLMG->getJsonAsInput('data'); goto zwVmW; MWBGS: } public function uninstall() { goto NwTEk; Tc0XZ: $gGKO8 = $HoLMG->getTrimString('step'); goto HL5QS; xG5zf: BizException::throwsIfEmpty('version为空', $k8iQn); goto UQSRR; UQSRR: BizException::throwsIf('系统模块不能动态配置', ModuleManager::isSystemModule($VLCiR)); goto CowyN; Ts5F1: $k8iQn = $tlqSz->getTrimString('version'); goto vTLE7; d3Hd1: BizException::throwsIfEmpty('module为空', $VLCiR); goto xG5zf; DSRvG: if ($OhyqL) { switch ($gGKO8) { default: goto AaANR; xMhBf: return $this->doFinish(array('<span class="ub-text-success">卸载完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>')); goto RmgMz; fTzBZ: BizException::throwsIfResponseError($mW7Vi); goto xMhBf; AaANR: $mW7Vi = ModuleManager::uninstall($VLCiR); goto fTzBZ; RmgMz: } } else { switch ($gGKO8) { case 'removePackage': goto Ytvhi; mjlDg: return $this->doFinish(array('<span class="ub-text-success">卸载完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>')); goto Ixewk; Ytvhi: $mW7Vi = ModuleStoreUtil::removeModule($VLCiR, $k8iQn); goto BmKET; BmKET: BizException::throwsIfResponseError($mW7Vi); goto mjlDg; Ixewk: default: goto QT9hU; xcax5: BizException::throwsIfResponseError($mW7Vi); goto BdmxF; QT9hU: $mW7Vi = ModuleManager::uninstall($VLCiR); goto xcax5; BdmxF: return $this->doNext('uninstall', 'removePackage', array('<span class="ub-text-success">开始卸载 ' . $VLCiR . ' V' . $k8iQn . '</span>')); goto f3gOT; f3gOT: } } goto LQR61; NwTEk: AdminPermission::permitCheck('ModuleStoreManage'); goto TFbU8; vTLE7: $OhyqL = $tlqSz->getBoolean('isLocal'); goto d3Hd1; CowyN: $this->moduleOperateCheck($VLCiR); goto DSRvG; TFbU8: AdminPermission::demoCheck(); goto PHSZg; HL5QS: $tlqSz = $HoLMG->getJsonAsInput('data'); goto dWcVo; dWcVo: $VLCiR = $tlqSz->getTrimString('module'); goto Ts5F1; PHSZg: $HoLMG = InputPackage::buildFromInput(); goto Tc0XZ; LQR61: } public function upgrade() { goto hW7xR; zqAOE: BizException::throwsIfEmpty('version为空', $k8iQn); goto EKva0; QSISQ: $HoLMG = InputPackage::buildFromInput(); goto tiRwh; wGo1Q: $tlqSz = $HoLMG->getJsonAsInput('data'); goto idyPZ; jJs6c: switch ($gGKO8) { case 'installModule': goto euOIN; UJj9x: return $this->doFinish(array('<span class="ub-text-success">升级安装完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>')); goto lnOXc; FHCGG: BizException::throwsIfResponseError($mW7Vi); goto YeD0i; euOIN: $mW7Vi = ModuleManager::install($VLCiR, true); goto FHCGG; YeD0i: $mW7Vi = ModuleManager::enable($VLCiR); goto BM2Z0; BM2Z0: BizException::throwsIfResponseError($mW7Vi); goto UJj9x; lnOXc: case 'unpackPackage': goto j6LHG; tcniQ: $YMy49 = $tlqSz->getTrimString('licenseKey'); goto KC8CP; rz0cg: BizException::throwsIfResponseError($mW7Vi); goto Y_w2F; Y_w2F: return $this->doNext('upgrade', 'installModule', array_merge(array('<span class="ub-text-success">模块解压完成</span>', '<span class="ub-text-white">开始安装...</span>'), $mW7Vi['data'])); goto VQmKh; cSugs: try { $mW7Vi = ModuleStoreUtil::unpackModule($VLCiR, $vgCwG, $YMy49); } catch (\Exception $Dnvff) { ModuleStoreUtil::cleanDownloadedPackage($vgCwG); throw $Dnvff; } goto rz0cg; dyUnt: BizException::throwsIfEmpty('package为空', $vgCwG); goto tcniQ; j6LHG: $vgCwG = $tlqSz->getTrimString('package'); goto dyUnt; KC8CP: BizException::throwsIfEmpty('licenseKey为空', $YMy49); goto cSugs; VQmKh: case 'downloadPackage': goto TSS0B; qWjmh: return $this->doNext('upgrade', 'unpackPackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($mW7Vi['data']['packageSize']) . '</span>', '<span class="ub-text-white">开始解压安装包...</span>'), array('package' => $mW7Vi['data']['package'], 'licenseKey' => $mW7Vi['data']['licenseKey'])); goto N1cc6; TSS0B: $mW7Vi = ModuleStoreUtil::downloadPackage($Vhd2R, $VLCiR, $k8iQn); goto dHxIl; dHxIl: BizException::throwsIfResponseError($mW7Vi); goto qWjmh; N1cc6: case 'checkPackage': goto GbF9U; W1J1s: foreach ($mW7Vi['data']['requires'] as $Wd2lc) { $N9oEa[] = '<span>&nbsp;&nbsp;</span>' . ($Wd2lc['success'] ? '<span class="ub-text-success"><i class="iconfont icon-check"></i> 成功</span>' : '<span class="ub-text-danger"><i class="iconfont icon-warning"></i> 失败</span>') . " <span>{$Wd2lc['name']}</span> " . ($Wd2lc['resolve'] ? " <span>解决：{$Wd2lc['resolve']}</span>" : ''); } goto fsSIL; EwDkn: $N9oEa[] = '<span class="ub-text-white">开始下载安装包...</span>'; goto gwt25; gwt25: return $this->doNext('upgrade', 'downloadPackage', array_merge(array('<span class="ub-text-success">预检成功，' . count($mW7Vi['data']['requires']) . '个依赖满足要求，安装包大小 ' . FileUtil::formatByte($mW7Vi['data']['packageSize']) . '</span>'), $N9oEa)); goto qC9xS; fsSIL: if ($mW7Vi['data']['errorCount'] > 0) { return $this->doFinish(array_merge($N9oEa, array('<span class="ub-text-danger">预检失败，' . $mW7Vi['data']['errorCount'] . '个依赖不满足要求</span>'))); } goto EwDkn; RGKAz: $N9oEa = array(); goto W1J1s; l7SPZ: BizException::throwsIfResponseError($mW7Vi); goto RGKAz; GbF9U: $mW7Vi = ModuleStoreUtil::checkPackage($Vhd2R, $VLCiR, $k8iQn); goto l7SPZ; qC9xS: default: return $this->doNext('upgrade', 'checkPackage', array('<span class="ub-text-success">开始升级到远程模块 ' . $VLCiR . ' V' . $k8iQn . '</span>', '<span class="ub-text-white">开始模块安装预检...</span>')); } goto Prwxu; EKva0: $this->moduleOperateCheck($VLCiR); goto jJs6c; hW7xR: AdminPermission::permitCheck('ModuleStoreManage'); goto yfe7r; tiRwh: $Vhd2R = $HoLMG->getTrimString('token'); goto nEgp7; yfe7r: AdminPermission::demoCheck(); goto QSISQ; nEgp7: $gGKO8 = $HoLMG->getTrimString('step'); goto woDy_; CCP4v: $k8iQn = $tlqSz->getTrimString('version'); goto Ukx41; Ukx41: BizException::throwsIfEmpty('module为空', $VLCiR); goto zqAOE; woDy_: BizException::throwsIfEmpty('请先登录ModStartCMS账号', $Vhd2R); goto wGo1Q; idyPZ: $VLCiR = $tlqSz->getTrimString('module'); goto CCP4v; Prwxu: } public function install() { goto W7dzX; HLMTH: $this->moduleOperateCheck($VLCiR); goto pDplN; nG_LT: AdminPermission::demoCheck(); goto WGi2r; tdqcm: BizException::throwsIfEmpty('version为空', $k8iQn); goto QvumY; LFPnt: $gGKO8 = $HoLMG->getTrimString('step'); goto JOPZp; IUdP7: BizException::throwsIfEmpty('module为空', $VLCiR); goto tdqcm; ST3V5: $VLCiR = $tlqSz->getTrimString('module'); goto V9cQ3; kCbuo: $Vhd2R = $HoLMG->getTrimString('token'); goto LFPnt; nfNBs: $tlqSz = $HoLMG->getJsonAsInput('data'); goto ST3V5; V9cQ3: $k8iQn = $tlqSz->getTrimString('version'); goto dHYBC; JOPZp: BizException::throwsIfEmpty('请先登录ModStartCMS账号', $Vhd2R); goto nfNBs; WGi2r: $HoLMG = InputPackage::buildFromInput(); goto kCbuo; dHYBC: $OhyqL = $tlqSz->getBoolean('isLocal'); goto IUdP7; W7dzX: AdminPermission::permitCheck('ModuleStoreManage'); goto nG_LT; QvumY: BizException::throwsIf('系统模块不能动态配置', ModuleManager::isSystemModule($VLCiR)); goto HLMTH; pDplN: if ($OhyqL) { switch ($gGKO8) { case 'installModule': goto JWNeV; cGZ4G: BizException::throwsIfResponseError($mW7Vi); goto Q8DMi; TuZiE: BizException::throwsIfResponseError($mW7Vi); goto JZb7T; JZb7T: return $this->doFinish(array('<span class="ub-text-success">安装完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>')); goto B9gnU; JWNeV: $mW7Vi = ModuleManager::install($VLCiR, true); goto cGZ4G; Q8DMi: $mW7Vi = ModuleManager::enable($VLCiR); goto TuZiE; B9gnU: default: return $this->doNext('install', 'installModule', array('<span class="ub-text-success">开始安装本地模块 ' . $VLCiR . ' V' . $k8iQn . '</span>', '<span class="ub-text-white">开始安装..</span>')); } } else { switch ($gGKO8) { case 'installModule': goto h6GOk; AXuAV: BizException::throwsIfResponseError($mW7Vi); goto Tyd0x; Tyd0x: return $this->doFinish(array('<span class="ub-text-success">安装完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>')); goto FUr8l; h6GOk: $mW7Vi = ModuleManager::install($VLCiR, true); goto NTFT7; Osha7: $mW7Vi = ModuleManager::enable($VLCiR); goto AXuAV; NTFT7: if (Response::isError($mW7Vi)) { ModuleManager::clean($VLCiR); BizException::throws($mW7Vi['msg']); } goto Osha7; FUr8l: case 'unpackPackage': goto spKDB; FzNEO: try { $mW7Vi = ModuleStoreUtil::unpackModule($VLCiR, $vgCwG, $YMy49); } catch (\Exception $Dnvff) { ModuleStoreUtil::cleanDownloadedPackage($vgCwG); throw $Dnvff; } goto X5KjB; BFX8l: BizException::throwsIfEmpty('licenseKey为空', $YMy49); goto FzNEO; g_r7j: $YMy49 = $tlqSz->getTrimString('licenseKey'); goto BFX8l; spKDB: $vgCwG = $tlqSz->getTrimString('package'); goto mQPvr; mQPvr: BizException::throwsIfEmpty('package为空', $vgCwG); goto g_r7j; udRYF: return $this->doNext('install', 'installModule', array_merge(array('<span class="ub-text-success">模块解压完成</span>', '<span class="ub-text-white">开始安装...</span>'), $mW7Vi['data'])); goto P3a4R; X5KjB: BizException::throwsIfResponseError($mW7Vi); goto udRYF; P3a4R: case 'downloadPackage': goto j6T7w; j6T7w: $mW7Vi = ModuleStoreUtil::downloadPackage($Vhd2R, $VLCiR, $k8iQn); goto gqoNV; gqoNV: BizException::throwsIfResponseError($mW7Vi); goto pDMRQ; pDMRQ: return $this->doNext('install', 'unpackPackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($mW7Vi['data']['packageSize']) . '</span>', '<span class="ub-text-white">开始解压安装包...</span>'), array('package' => $mW7Vi['data']['package'], 'licenseKey' => $mW7Vi['data']['licenseKey'])); goto I8n7c; I8n7c: case 'checkPackage': goto s1spm; r8Lkx: if ($mW7Vi['data']['errorCount'] > 0) { return $this->doFinish(array_merge($N9oEa, array('<span class="ub-text-danger">预检失败，' . $mW7Vi['data']['errorCount'] . '个依赖不满足要求</span>'))); } goto bKaoG; Yl9aN: BizException::throwsIfResponseError($mW7Vi); goto SIek3; s1spm: $mW7Vi = ModuleStoreUtil::checkPackage($Vhd2R, $VLCiR, $k8iQn); goto Yl9aN; ARGlC: break; goto wDUQA; bKaoG: $N9oEa[] = '<span class="ub-text-white">开始下载安装包...</span>'; goto nsjy2; SIek3: $N9oEa = array(); goto v3Qle; v3Qle: foreach ($mW7Vi['data']['requires'] as $Wd2lc) { $N9oEa[] = '<span>&nbsp;&nbsp;</span>' . ($Wd2lc['success'] ? '<span class="ub-text-success"><i class="iconfont icon-check"></i> 成功</span>' : '<span class="ub-text-danger"><i class="iconfont icon-warning"></i> 失败</span>') . " <span>{$Wd2lc['name']}</span> " . ($Wd2lc['resolve'] ? " <span>解决：{$Wd2lc['resolve']}</span>" : ''); } goto r8Lkx; nsjy2: return $this->doNext('install', 'downloadPackage', array_merge(array('<span class="ub-text-success">预检成功，' . count($mW7Vi['data']['requires']) . '个依赖满足要求，安装包大小 ' . FileUtil::formatByte($mW7Vi['data']['packageSize']) . '</span>'), $N9oEa)); goto ARGlC; wDUQA: default: return $this->doNext('install', 'checkPackage', array('<span class="ub-text-success">开始安装远程模块 ' . $VLCiR . ' V' . $k8iQn . '</span>', '<span class="ub-text-white">开始模块安装预检...</span>')); } } goto Ng4pn; Ng4pn: } public function config(AdminConfigBuilder $bhaAK, $VLCiR) { goto RON0A; T8YG7: return $bhaAK->perform(RepositoryUtil::itemFromArray($cKGyE['config']), function (Form $mUGak) use($VLCiR, $cKGyE) { AdminPermission::demoCheck(); if ($cKGyE['isSystem']) { ModuleManager::saveSystemOverwriteModuleConfig($VLCiR, $mUGak->dataForming()); } else { ModuleManager::saveUserInstalledModuleConfig($VLCiR, $mUGak->dataForming()); } return Response::generate(0, '保存成功', null, CRUDUtil::jsDialogClose()); }); goto LpWis; fX3h_: BizException::throwsIfEmpty('Module config error', $jGWP8['config']); goto mgTYX; ZhE7S: $cKGyE = ModuleManager::getInstalledModuleInfo($VLCiR); goto fX3h_; iiQWa: $bhaAK->pageTitle(htmlspecialchars($jGWP8['title']) . ' ' . L('Module Config')); goto ZhE7S; A6mzP: $bhaAK->useDialog(); goto iiQWa; RON0A: AdminPermission::permitCheck('ModuleStoreManage'); goto Kx2s5; Kx2s5: $jGWP8 = ModuleManager::getModuleBasic($VLCiR); goto A6mzP; mgTYX: foreach ($jGWP8['config'] as $T_BMM => $HCNM_) { goto wcbDp; wcbDp: $sfBE1 = null; goto XklcG; VvxLn: foreach ($HCNM_ as $mSpcV) { $Ut_Gf = array_shift($mSpcV); if (null === $sfBE1) { array_unshift($mSpcV, $T_BMM); $sfBE1 = call_user_func(array($bhaAK, $Ut_Gf), ...$mSpcV); } else { call_user_func(array($sfBE1, $Ut_Gf), ...$mSpcV); } } goto hqta1; XklcG: if (!isset($cKGyE['config'][$T_BMM])) { $cKGyE['config'][$T_BMM] = null; } goto VvxLn; hqta1: } goto T8YG7; LpWis: } }