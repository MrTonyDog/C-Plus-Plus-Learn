<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\Web\Controller; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Artisan; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use Illuminate\Support\Str; use ModStart\Admin\Auth\Admin; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\RandomUtil; use ModStart\Module\ModuleManager; use PDO; class InstallController extends Controller { public function lock() { goto QCEwK; V0RfT: return Response::send(0, 'install lock ok ^_^'); goto cEr0r; bGP2I: file_put_contents($HEv2_, 'lock'); goto V0RfT; QCEwK: $HEv2_ = storage_path('install.lock'); goto gkVqR; gkVqR: if (file_exists($HEv2_)) { return Response::send(0, 'install lock error -_-'); } goto bGP2I; cEr0r: } public function ping() { try { goto OGili; SW8IM: if (0 == $mvcus && Str::contains($BZpIf, 'Current application environment')) { return 'ok'; } goto pOeeV; OGili: $mvcus = Artisan::call('env'); goto QPZyr; QPZyr: $BZpIf = trim(Artisan::output()); goto SW8IM; pOeeV: return 'ERROR: code=' . $mvcus . ', msg:' . $BZpIf; goto S1Nlm; S1Nlm: } catch (\Exception $Dnvff) { return 'ERROR:' . $Dnvff->getMessage(); } } public function prepare() { goto zlnma; E4TIU: $zJbTP = preg_replace('/APP_KEY=(.*?)\\n/', 'APP_KEY=' . RandomUtil::string(32) . '
', $zJbTP); goto SVM6P; Ep1wk: if (empty($qJPmq)) { return Response::jsonError('数据库数据库不能为空'); } goto GYPkL; cU3XT: $Vs5xF = $HoLMG->getBoolean('installDemo'); goto hr0qN; KtKAt: return Response::jsonSuccess(); goto kLa1Q; l2kNx: $cF9sV = $HoLMG->getTrimString('password'); goto cU3XT; tFtPJ: $zJbTP = file_get_contents(base_path('env.example')); goto jwZUT; s6S7S: $zJbTP = preg_replace('/DB_PREFIX=(.*?)\\n/', 'DB_PREFIX=' . $g_5_t . '
', $zJbTP); goto E4TIU; LpqEq: $r0Plk = $HoLMG->getTrimString('db_password', ''); goto hqcsj; yRwsV: file_put_contents(base_path('.env'), $zJbTP); goto KtKAt; zlnma: if (file_exists(storage_path('install.lock'))) { return Response::jsonError('系统不能重复安装（请删除install.lock文件后重试）'); } goto dCVT2; jZn56: if (empty($W03l4)) { return Response::jsonError('管理用户不能为空'); } goto s4eHI; X_tuY: $RQWTY = $HoLMG->getTrimString('db_host'); goto mZKDQ; SVM6P: if (!empty($X0rs2['envs'])) { foreach ($X0rs2['envs'] as $bFIeY) { $zJbTP = preg_replace('/' . $bFIeY['name'] . '=(.*?)\\n/', $bFIeY['name'] . '=' . $HoLMG->getTrimString($bFIeY['name']) . '
', $zJbTP); } } goto yRwsV; mwRvM: $ohG43 = $HoLMG->getTrimString('db_username'); goto LpqEq; jwZUT: $zJbTP = preg_replace('/DB_HOST=(.*?)\\n/', 'DB_HOST=' . $RQWTY . '
', $zJbTP); goto n0kJH; RqejU: $X0rs2 = $HoLMG->getJson('INSTALL_CONFIG'); goto P4OOn; hr0qN: $xj3Z4 = $HoLMG->getBoolean('installLicense'); goto RqejU; n0kJH: $zJbTP = preg_replace('/DB_DATABASE=(.*?)\\n/', 'DB_DATABASE=' . $qJPmq . '
', $zJbTP); goto M7vEQ; P4OOn: if (empty($RQWTY)) { return Response::jsonError('数据库主机名不能为空'); } goto Ep1wk; mZKDQ: $qJPmq = $HoLMG->getTrimString('db_database'); goto mwRvM; Z8h0I: $zJbTP = preg_replace('/DB_PASSWORD=(.*?)\\n/', 'DB_PASSWORD=' . $r0Plk . '
', $zJbTP); goto s6S7S; nPCA_: if (file_exists(base_path('license_url.txt')) && !$xj3Z4) { return Response::jsonError('请先同意《软件安装许可协议》'); } goto xb6CN; GYPkL: if (empty($ohG43)) { return Response::jsonError('数据库用户明不能为空'); } goto jZn56; M7vEQ: $zJbTP = preg_replace('/DB_USERNAME=(.*?)\\n/', 'DB_USERNAME=' . $ohG43 . '
', $zJbTP); goto Z8h0I; TWmqv: $W03l4 = $HoLMG->getTrimString('username'); goto l2kNx; xb6CN: try { new PDO("mysql:host={$RQWTY};dbname={$qJPmq}", $ohG43, $r0Plk); } catch (\Exception $Dnvff) { goto j3oqA; j3oqA: $mgOoi = $Dnvff->getMessage(); goto IARYn; d8zrp: return Response::jsonError('连接数据信息 ' . $RQWTY . '.' . $qJPmq . ' 失败!'); goto YvCb2; uCJYR: Log::error('InstallError -> ' . $Dnvff->getMessage() . ' -> ' . $Dnvff->getTraceAsString()); goto d8zrp; IARYn: if (str_contains($mgOoi, 'Server sent charset unknown to the client')) { return Response::generateError('数据库编码不支持：' . $mgOoi); } else { if (str_contains($mgOoi, 'Access denied for user')) { return Response::generateError('用户密码不匹配：' . $mgOoi); } } goto uCJYR; YvCb2: } goto tFtPJ; s4eHI: if (empty($cF9sV)) { return Response::jsonError('管理用户密码不能为空'); } goto nPCA_; dCVT2: $HoLMG = InputPackage::buildFromInput(); goto X_tuY; hqcsj: $g_5_t = $HoLMG->getTrimString('db_prefix', ''); goto TWmqv; kLa1Q: } public function execute() { goto Jo0QE; u6Se4: $Vs5xF = $HoLMG->getBoolean('installDemo'); goto PvuBv; y7jQ2: if ($Vs5xF && file_exists($JJGcw = public_path('data_demo/data.php'))) { goto joeuL; v2gnh: if (!empty($hRWBB['inserts'])) { foreach ($hRWBB['inserts'] as $qNtCk => $LdZT6) { ModelUtil::insertAll($qNtCk, $LdZT6); } } goto dTfvC; dTfvC: if (!empty($hRWBB['updates'])) { foreach ($hRWBB['updates'] as $Nfq8P) { DB::table($Nfq8P['table'])->where($Nfq8P['where'])->update($Nfq8P['update']); } } goto bM_Bq; joeuL: $hRWBB = (include $JJGcw); goto v2gnh; bM_Bq: } goto DLnLl; Jo0QE: if (file_exists(storage_path('install.lock'))) { return Response::jsonError('系统不能重复安装（请删除install.lock文件后重试）'); } goto ppmlY; KB2Kn: foreach (ModuleManager::listAllInstalledModulesInRequiredOrder() as $VLCiR) { goto bxL53; bxL53: if (!ModuleManager::isExists($VLCiR)) { continue; } goto bQLsS; Y7sL8: if (Response::isError($mW7Vi)) { return Response::generateError($mW7Vi['msg']); } goto tg3Qg; bQLsS: try { $mW7Vi = ModuleManager::install($VLCiR); } catch (\Exception $Dnvff) { return $this->handleException($Dnvff); } goto Y7sL8; tg3Qg: } goto y7jQ2; EQeeD: if (0 != $mvcus) { return Response::jsonError("安装错误 exitCode({$mvcus})"); } goto QlnJ3; d0opl: $mvcus = 0; goto e_7MY; e_7MY: try { $mvcus = Artisan::call('migrate'); } catch (\Exception $Dnvff) { return $this->handleException($Dnvff); } goto EQeeD; pGLT7: if (empty($cF9sV)) { return Response::jsonError('管理用户密码为空'); } goto d0opl; q19mi: $cF9sV = $HoLMG->getTrimString('password'); goto u6Se4; jvUYf: return Response::json(0, '安装成功，点击即将跳转到管理后台', null, '/admin'); goto XBBkJ; ppmlY: $HoLMG = InputPackage::buildFromInput(); goto Y7GIg; gFFRf: if ($oniRr === 0) { Admin::add($W03l4, $cF9sV); } goto KB2Kn; Y7GIg: $W03l4 = $HoLMG->getTrimString('username'); goto q19mi; QlnJ3: $oniRr = ModelUtil::count('admin_user'); goto gFFRf; DLnLl: file_put_contents(storage_path('install.lock'), 'lock'); goto jvUYf; PvuBv: if (empty($W03l4)) { return Response::jsonError('管理用户名为空'); } goto pGLT7; XBBkJ: } private function handleException(\Exception $Dnvff) { goto akOiD; SyODl: if (preg_match('/Table \'(.*?)\' already exists/', $mgOoi, $pov6U)) { return Response::jsonError('数据表 ' . $pov6U[1] . ' 已经存在（可能您使用了一个非空的数据库，请删除表或更新数据库）'); } goto eXByX; akOiD: $mgOoi = $Dnvff->getMessage(); goto mB7XB; mB7XB: $N_fiW = $Dnvff->getTraceAsString(); goto SyODl; eXByX: if (preg_match('/Duplicate column name \'(.*?)\'/', $mgOoi, $pov6U)) { goto kwPfL; WgRN8: $JJGcw = null; goto c3_5U; DAFyu: return Response::jsonError('数据表字段 ' . $sfBE1 . ' 已经存在（请查看' . $JJGcw . '迁移文件配置）'); goto nQqVX; kwPfL: $sfBE1 = $pov6U[1]; goto WgRN8; c3_5U: if (preg_match('/(module\\/.*?\\/Migrate\\/.*?\\.php)/', $N_fiW, $pov6U)) { $JJGcw = $pov6U[1]; } goto DAFyu; nQqVX: } goto cjDs0; cjDs0: throw $Dnvff; goto GH_YK; GH_YK: } }