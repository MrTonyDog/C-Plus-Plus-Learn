<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Api\Controller; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Session; use Illuminate\Support\Str; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\EventUtil; use ModStart\Core\Util\FileUtil; use ModStart\Core\Util\FormatUtil; use ModStart\Misc\Captcha\CaptchaFacade; use ModStart\Module\ModuleBaseController; use Module\Member\Auth\MemberUser; use Module\Member\Config\MemberOauth; use Module\Member\Events\MemberUserUpdatedEvent; use Module\Member\Support\MemberLoginCheck; use Module\Member\Util\MemberUtil; use Module\Vendor\Email\MailSendJob; use Module\Vendor\Sms\SmsUtil; use Module\Vendor\Support\ResponseCodes; class MemberProfileController extends ModuleBaseController implements MemberLoginCheck { public function password() { goto sryJd; keYN5: if ($mW7Vi['code']) { return Response::generate(-1, $mW7Vi['msg']); } goto Xi34y; Xi34y: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'password')); goto y5x6L; EiRjK: $qe8fj = MemberUser::get(); goto J2Ptw; y5x6L: return Response::generate(0, '修改成功', null, '[reload]'); goto he_ML; sryJd: $HoLMG = InputPackage::buildFromInput(); goto R4msO; Mwwc0: $DRH_7 = $HoLMG->getTrimString('passwordRepeat'); goto MfxAn; R4msO: $sTroC = $HoLMG->getTrimString('passwordOld'); goto j9wHs; MfxAn: if ($q9vFc != $DRH_7) { return Response::generate(-1, '两次新密码输入不一致'); } goto EiRjK; j9wHs: $q9vFc = $HoLMG->getTrimString('passwordNew'); goto Mwwc0; J2Ptw: if (empty($qe8fj['password'])) { $mW7Vi = MemberUtil::changePassword(MemberUser::id(), $q9vFc, null, true); } else { $mW7Vi = MemberUtil::changePassword(MemberUser::id(), $q9vFc, $sTroC); } goto keYN5; he_ML: } public function avatar() { goto pXpPe; aYHY9: switch ($HoLMG->getTrimString('type')) { case 'cropper': goto YdPau; VTqg9: if ($mW7Vi['code']) { return $mW7Vi; } goto Mb591; XsvyN: return Response::generate(0, '保存成功', null, '[reload]'); goto IIviz; AmL55: if (empty($vZVS1)) { return Response::generate(-1, '头像内容为空'); } goto znfXX; znfXX: $mW7Vi = MemberUtil::setAvatar(MemberUser::id(), $vZVS1, $lidoB); goto VTqg9; GbpfR: if (Str::startsWith($vZVS1, 'data:image/jpeg;base64,')) { $lidoB = 'jpg'; $vZVS1 = substr($vZVS1, strlen('data:image/jpeg;base64,')); } else { if (Str::startsWith($vZVS1, 'data:image/png;base64,')) { $lidoB = 'png'; $vZVS1 = substr($vZVS1, strlen('data:image/png;base64,')); } } goto EVlbt; YdPau: $lidoB = null; goto GbpfR; EVlbt: if (empty($lidoB)) { return Response::generate(-1, '头像数据为空'); } goto zCMcF; zCMcF: $vZVS1 = @base64_decode($vZVS1); goto AmL55; Mb591: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'avatar')); goto XsvyN; IIviz: default: goto A2MZW; A2MZW: $vZVS1 = FileUtil::savePathToLocalTemp($vZVS1); goto gp3ef; hoo5A: $vZVS1 = file_get_contents($vZVS1); goto LhmcC; dZOal: $mW7Vi = MemberUtil::setAvatar(MemberUser::id(), $vZVS1, $xLhgB); goto y_H40; JyBRo: if (!in_array($xLhgB, config('data.upload.image.extensions'))) { return Response::generate(-1, '头像格式不合法'); } goto hoo5A; dCBvp: return Response::generate(0, '保存成功', null, '[reload]'); goto CGPyv; gp3ef: if (empty($vZVS1)) { return Response::generate(-1, '读取头像文件失败:-1'); } goto vVutN; O9JK4: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'avatar')); goto dCBvp; LhmcC: if (empty($vZVS1)) { return Response::generate(-1, '读取头像文件失败:-2'); } goto dZOal; y_H40: if ($mW7Vi['code']) { return $mW7Vi; } goto O9JK4; vVutN: $xLhgB = FileUtil::extension($vZVS1); goto JyBRo; CGPyv: } goto hpriO; pXpPe: $HoLMG = InputPackage::buildFromInput(); goto z0fgy; z0fgy: $vZVS1 = $HoLMG->get('avatar'); goto Q3bTF; Q3bTF: if (empty($vZVS1)) { return Response::generate(-1, '头像内容为空'); } goto aYHY9; hpriO: } public function captchaRaw() { return CaptchaFacade::create('default'); } public function captcha() { $Nd07J = $this->captchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($Nd07J->getOriginalContent()))); } public function email() { goto UxwSk; slmVr: $xSCWV = MemberUtil::getByEmail($plRSP); goto zAP7_; rU3xe: return Response::generate(0, '修改成功', null, '[reload]'); goto L0Dh3; jKm70: Session::forget('memberProfileEmailVerifyTime'); goto bOyCy; t1A6L: if ($plRSP != Session::get('memberProfileEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto slmVr; zAP7_: if (!empty($xSCWV)) { if ($xSCWV['id'] != MemberUser::id()) { return Response::generate(-1, '该邮箱已被其他账户绑定'); } if ($xSCWV['id'] == MemberUser::id() && $xSCWV['email'] == $plRSP) { if (!empty($xSCWV['emailVerified'])) { return Response::generate(-1, '邮箱未修改，无需重新绑定。'); } } } goto NM6Jx; bOyCy: Session::forget('memberProfileEmail'); goto rU3xe; IjOZ_: $GF17O = $HoLMG->getTrimString('verify'); goto SVTPd; SVTPd: if (empty($plRSP)) { return Response::generate(-1, '邮箱不能为空'); } goto v33sU; uAWn5: if ($GF17O != Session::get('memberProfileEmailVerify')) { return Response::generate(-1, '验证码不正确'); } goto JUEz6; UmDzq: Session::forget('memberProfileEmailVerify'); goto jKm70; l_wjo: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'email')); goto UmDzq; DqRK1: $plRSP = $HoLMG->getEmail('email'); goto IjOZ_; NM6Jx: MemberUtil::update(MemberUser::id(), array('emailVerified' => true, 'email' => $plRSP)); goto l_wjo; JUEz6: if (Session::get('memberProfileEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '验证码已过期'); } goto t1A6L; v33sU: if (!FormatUtil::isEmail($plRSP)) { return Response::generate(-1, '邮箱格式不正确'); } goto r5MYo; r5MYo: if (empty($GF17O)) { return Response::generate(-1, '验证码不能为空'); } goto uAWn5; UxwSk: $HoLMG = InputPackage::buildFromInput(); goto DqRK1; L0Dh3: } public function emailVerify() { goto hQxyc; Twum0: $GF17O = rand(100000, 999999); goto FAioD; GYn69: MailSendJob::create($plRSP, '验证码', 'verify', array('code' => $GF17O)); goto mqr98; RyhLK: if (!CaptchaFacade::check(Input::get('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto hM484; vYeOx: if (empty($plRSP)) { return Response::generate(-1, '邮箱不能为空'); } goto gVuea; McJkR: if (Session::get('memberProfileEmailVerifyTime') && $plRSP == Session::get('memberProfileEmail')) { if (Session::get('memberProfileEmailVerifyTime') + 60 * 10 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto Twum0; hcOkE: Session::put('memberProfileEmailVerifyTime', time()); goto sfNw2; gVuea: if (!FormatUtil::isEmail($plRSP)) { return Response::generate(-1, '邮箱格式不正确'); } goto RyhLK; kF7c0: if (!empty($xSCWV)) { if ($xSCWV['id'] != MemberUser::id()) { return Response::generate(-1, '该邮箱已被其他账户绑定'); } if ($xSCWV['id'] == MemberUser::id() && $xSCWV['email'] == $plRSP) { if (!empty($xSCWV['emailVerified'])) { return Response::generate(-1, '邮箱未修改，无需重新绑定。'); } } } goto McJkR; hM484: $xSCWV = MemberUtil::getByEmail($plRSP); goto kF7c0; sfNw2: Session::put('memberProfileEmail', $plRSP); goto GYn69; hQxyc: $plRSP = Input::get('target'); goto vYeOx; FAioD: Session::put('memberProfileEmailVerify', $GF17O); goto hcOkE; mqr98: return Response::generate(0, '验证码发送成功'); goto SHKmH; SHKmH: } public function phone() { goto hWb19; b8XJZ: Session::forget('memberProfilePhoneVerifyTime'); goto Qy5Mp; Qy5Mp: Session::forget('memberProfilePhone'); goto lDg6w; aLnWD: Session::forget('memberProfilePhoneVerify'); goto b8XJZ; v6tt6: if (!empty($xSCWV)) { if ($xSCWV['id'] != MemberUser::id()) { return Response::generate(-1, '该手机已被其他账户绑定'); } if ($xSCWV['id'] == MemberUser::id() && $xSCWV['phone'] == $dEdul) { if (!empty($xSCWV['phoneVerified'])) { return Response::generate(-1, '手机号未修改，无需重新绑定。'); } } } goto Vi2H7; lDg6w: return Response::generate(0, '修改成功', null, '[reload]'); goto aMlEu; TjyXS: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'phone')); goto aLnWD; escMC: $GF17O = $HoLMG->getTrimString('verify'); goto GiwaM; oZPBQ: $dEdul = $HoLMG->getPhone('phone'); goto escMC; HeTht: if ($GF17O != Session::get('memberProfilePhoneVerify')) { return Response::generate(-1, '验证码不正确'); } goto Kdrnb; hWb19: $HoLMG = InputPackage::buildFromInput(); goto oZPBQ; EjK81: if (!FormatUtil::isPhone($dEdul)) { return Response::generate(-1, '手机格式不正确'); } goto n7_Re; n7_Re: if (empty($GF17O)) { return Response::generate(-1, '验证码不能为空'); } goto HeTht; q3BfT: $xSCWV = MemberUtil::getByPhone($dEdul); goto v6tt6; Vi2H7: MemberUtil::update(MemberUser::id(), array('phoneVerified' => true, 'phone' => $dEdul)); goto TjyXS; TSOlu: if ($dEdul != Session::get('memberProfilePhone')) { return Response::generate(-1, '两次手机不一致'); } goto q3BfT; Kdrnb: if (Session::get('memberProfilePhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '验证码已过期'); } goto TSOlu; GiwaM: if (empty($dEdul)) { return Response::generate(-1, '手机不能为空'); } goto EjK81; aMlEu: } public function phoneVerify() { goto CPfbX; To1E4: if (!CaptchaFacade::check(Input::get('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '图片验证码错误'); } goto gt5V0; ExiOs: Session::put('memberProfilePhoneVerifyTime', time()); goto i_898; CPfbX: $dEdul = Input::get('target'); goto ZBALk; twI6p: SmsUtil::send($dEdul, 'verify', array('code' => $GF17O)); goto gleV9; pBoC7: if (Session::get('memberProfilePhoneVerifyTime') && $dEdul == Session::get('memberProfilePhone')) { if (Session::get('memberProfilePhoneVerifyTime') + 60 * 2 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto v6Ihx; cX1Ve: if (!empty($xSCWV)) { if ($xSCWV['id'] != MemberUser::id()) { return Response::generate(-1, '该手机已被其他账户绑定'); } if ($xSCWV['id'] == MemberUser::id() && $xSCWV['phone'] == $dEdul) { if (!empty($xSCWV['phoneVerified'])) { return Response::generate(-1, '手机号未修改，无需重新绑定。'); } } } goto pBoC7; ZBALk: if (empty($dEdul)) { return Response::generate(-1, '手机不能为空'); } goto xj1eX; xj1eX: if (!FormatUtil::isPhone($dEdul)) { return Response::generate(-1, '手机格式不正确'); } goto To1E4; zHCr0: Session::put('memberProfilePhoneVerify', $GF17O); goto ExiOs; i_898: Session::put('memberProfilePhone', $dEdul); goto twI6p; v6Ihx: $GF17O = rand(100000, 999999); goto zHCr0; gt5V0: $xSCWV = MemberUtil::getByPhone($dEdul); goto cX1Ve; gleV9: return Response::generate(0, '验证码发送成功'); goto oTIXy; oTIXy: } public function oauthUnbind() { goto LIgOk; j1d1V: $JVgHL = MemberUtil::getOauthOpenId(MemberUser::id(), $Cdaf0->name()); goto LFlIT; LFlIT: if ($JVgHL) { MemberUtil::forgetOauth($Cdaf0->name(), $JVgHL); } goto p1Gwk; LIgOk: $HoLMG = InputPackage::buildFromInput(); goto FMovn; p1Gwk: return Response::generate(0, '解绑成功', null, '[reload]'); goto Tx_AH; ickRH: $Cdaf0 = MemberOauth::getOrFail($nKLrL); goto Gt2DF; FMovn: $nKLrL = $HoLMG->getTrimString('type'); goto ickRH; Gt2DF: BizException::throwsIfEmpty('授权方式不存在', $Cdaf0); goto j1d1V; Tx_AH: } }