<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Tecmz\Admin\Controller; use App\Constant\AppConstant; use Chumper\Zipper\Zipper; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Artisan; use ModStart\Admin\Auth\AdminPermission; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\FileUtil; use ModStart\Data\DataManager; use Module\Tecmz\Util\UpgradeUtil; class UpgradeController extends Controller { public static $PermitMethodMap = array('index' => '@SystemUpgrade', 'info' => '@SystemUpgrade', 'manual' => '@SystemUpgrade'); private function doFinish($N9oEa, $Lo9Xy = null) { return Response::generateSuccessData(array('msg' => array_map(function ($KdsT8) { return '<i class="iconfont icon-hr"></i> ' . $KdsT8; }, $N9oEa), 'logs' => $Lo9Xy, 'finish' => true)); } private function doNext($gGKO8, $N9oEa = array(), $hRWBB = array()) { goto i2X_N; ILXMC: return Response::generateSuccessData(array('msg' => array_map(function ($KdsT8) { if (!starts_with($KdsT8, '<')) { $KdsT8 = "<span class='ub-text-default'>{$KdsT8}</span>"; } return '<i class="iconfont icon-hr"></i> ' . $KdsT8; }, $N9oEa), 'step' => $gGKO8, 'data' => $hRWBB, 'finish' => false)); goto t75U7; y2UaT: $hRWBB = array_merge($HoLMG->getJsonAsInput('data')->all(), $hRWBB); goto ILXMC; i2X_N: $HoLMG = InputPackage::buildFromInput(); goto y2UaT; t75U7: } public function index() { if (Request::isPost()) { goto Sgf2u; VwlJw: $HoLMG = InputPackage::buildFromInput(); goto DyArT; DJLhb: $Vhd2R = $HoLMG->getTrimString('token'); goto mqxcG; Sgf2u: AdminPermission::demoCheck(); goto VwlJw; oKmuO: $HWfbK = $tlqSz->getTrimString('toVersion'); goto RMio2; lMi7W: switch ($gGKO8) { case 'upgradePackage': goto FeIrj; FgtxR: BizException::throwsIfEmpty('package为空', $vgCwG); goto E9GlV; E9GlV: BizException::throwsIfEmpty('diffContentFile为空', $zYgkK); goto iRJOs; MCv42: return $this->doFinish(array('<span class="ub-text-success">升级完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>'), $mW7Vi['data']['logs']); goto A3M8u; FeIrj: $vgCwG = $tlqSz->getTrimString('package'); goto PF9yo; CZl2E: BizException::throwsIfResponseError($mW7Vi); goto MCv42; PF9yo: $zYgkK = $tlqSz->getTrimString('diffContentFile'); goto FgtxR; iRJOs: $mW7Vi = UpgradeUtil::upgradePackage($vgCwG, $zYgkK); goto CZl2E; A3M8u: case 'downloadPackage': goto I0nIz; I0nIz: $mW7Vi = UpgradeUtil::downloadPackage($Vhd2R, AppConstant::APP, AppConstant::VERSION, $HWfbK); goto CFXBZ; C9e3b: return $this->doNext('upgradePackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($mW7Vi['data']['packageSize']) . '</span>', '<span class="ub-text-default">开始解压升级装包...</span>'), array('package' => $mW7Vi['data']['package'], 'diffContentFile' => $mW7Vi['data']['diffContentFile'])); goto gPucR; CFXBZ: BizException::throwsIfResponseError($mW7Vi); goto C9e3b; gPucR: case 'checkPackage': goto Rl81o; Rl81o: $mvcus = Artisan::call('migrate'); goto Oiy9x; A7pxr: return $this->doNext('downloadPackage', array('<span class="ub-text-success">预检通过</span>', '<span class="ub-text-default">开始下载升级包...</span>')); goto sKJj2; sKJj2: break; goto mmYZ6; Oiy9x: BizException::throwsIf('调用 php artisan 命令失败，不能自动升级', 0 != $mvcus); goto A7pxr; mmYZ6: default: return $this->doNext('checkPackage', array('<span class="ub-text-success">开始升级系统，从 V' . AppConstant::VERSION . ' 到 V' . $HWfbK . '</span>', '<span class="ub-text-default">开始预检系统...</span>')); } goto LkUvR; RMio2: BizException::throwsIfEmpty('toVersion为空', $HWfbK); goto lMi7W; mqxcG: $tlqSz = $HoLMG->getJsonAsInput('data'); goto oKmuO; DyArT: $gGKO8 = $HoLMG->getTrimString('step'); goto DJLhb; LkUvR: } return view('module::Tecmz.View.admin.upgrade'); } public function info() { $dSq0w = UpgradeUtil::latest(); return Response::generateSuccessData(array('version' => AppConstant::VERSION, 'latestVersion' => $dSq0w['latestVersion'], 'autoUpgrade' => $dSq0w['autoUpgrade'])); } public function manual() { if (Request::isPost()) { goto RCCJK; RCCJK: $mvcus = Artisan::call('migrate'); goto Rg2vn; ofpE0: return Response::generate(0, '操作完成', null, '[reload]'); goto aM_ZT; b4CNg: FileUtil::safeCleanLocalTemp($nu_Dd); goto PRHDt; co1k9: $mW7Vi = UpgradeUtil::upgradePackage($nu_Dd, $zYgkK); goto DqwhN; DqwhN: BizException::throwsIfResponseError($mW7Vi); goto EsL3d; lqczw: $HoLMG = InputPackage::buildFromInput(); goto FGWg2; peR4g: $Er_Mh->make($tBB0q); goto fRupG; zI8YR: $nu_Dd = FileUtil::generateLocalTempPath('zip'); goto eNjSq; PRHDt: FileUtil::safeCleanLocalTemp($zYgkK); goto ofpE0; IRMn1: $dLmZf = $Er_Mh->getFileContent('config.json'); goto watKn; FGWg2: $m3Rso = $HoLMG->getDataTempPath('upgradeZip'); goto qywJu; fRupG: BizException::throwsIf('升级包格式错误', !$Er_Mh->contains('config.json')); goto IRMn1; WKlms: file_put_contents($nu_Dd, $FiZZj); goto co1k9; gThtm: $zYgkK = FileUtil::generateLocalTempPath('json'); goto zI8YR; watKn: file_put_contents($zYgkK, $dLmZf); goto ZJDOM; ZJDOM: BizException::throwsIf('升级包格式错误', !$Er_Mh->contains('package.zip')); goto mkdq5; ZqHZA: $tBB0q = $mW7Vi['data']['path']; goto gThtm; qywJu: BizException::throwsIfEmpty('请上传差量升级包', $m3Rso); goto L173t; EsL3d: FileUtil::safeCleanLocalTemp($tBB0q); goto b4CNg; L173t: $mW7Vi = DataManager::preparePathForLocal($m3Rso); goto sFqJp; Rg2vn: BizException::throwsIf('调用 php artisan 命令失败，不能自动升级', 0 != $mvcus); goto lqczw; eNjSq: $Er_Mh = new Zipper(); goto peR4g; mkdq5: $FiZZj = $Er_Mh->getFileContent('package.zip'); goto WKlms; sFqJp: BizException::throwsIfResponseError($mW7Vi); goto ZqHZA; aM_ZT: } return view('module::Tecmz.View.admin.upgradeManual'); } }